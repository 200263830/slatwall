{"version":3,"sources":["controllers/preprocessaccount_addaccountpayment.ts"],"names":[],"mappings":"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","file":"controllers/preprocessaccount_addaccountpayment.js","sourcesContent":["'use strict';\nangular.module('slatwalladmin')\n.controller('preprocessaccount_addaccountpayment', ['$scope','$compile',function($scope, $compile) {\n\t//Define the different payment types used here\n\tvar paymentType = {aptCharge:\"444df32dd2b0583d59a19f1b77869025\",aptCredit:\"444df32e9b448ea196c18c66e1454c46\", aptAdjustment:\"68e3fb57d8102b47acc0003906d16ddd\"};\n\t\n\t$scope.totalAmountToApply = 0; //Default value to show on new form\n\t$scope.paymentTypeName = $.slatwall.rbKey('define.charge'); //Default payment type\n\t$scope.paymentTypeLock = true; //Used to lock down the order payment type dropdowns\n\t$scope.amount = 0;\n\t\n\t$scope.updatePaymentType = function() {\n\t\t//Change all order payment types here\n\t\tangular.forEach($scope.appliedOrderPayment, function(obj, key) {\n\t\t\t//Only change the payment type if the type isn't adjustment'\n\t\t\tif($scope.paymentType!=paymentType.aptAdjustment)\n\t\t\t\tobj.paymentType=$scope.paymentType;\n\t\t});\n\t\t\n\t\tif($scope.paymentType==paymentType.aptCharge) {\n\t\t\t$scope.paymentTypeName = $.slatwall.rbKey('define.charge');\n\t\t\t$scope.paymentTypeLock = true;\n\t\t} else if($scope.paymentType==paymentType.aptCredit) {\n\t\t\t$scope.paymentTypeName = $.slatwall.rbKey('define.credit');\n\t\t\t$scope.paymentTypeLock = true;\n\t\t} else if($scope.paymentType==paymentType.aptAdjustment) {\n\t\t\t$scope.paymentTypeLock = false;\n\t\t\t$scope.paymentTypeName = $.slatwall.rbKey('define.adjustment');\n\t\t\t$scope.amount = 0;\n\t\t}\n\t\t\n\t\t//Update the subtotal now that we changed the payment type\n\t\t$scope.updateSubTotal();\n\t};\n\n\t$scope.updateSubTotal = function() {\n\t\t$scope.totalAmountToApply = 0; //Reset the subtotal before we loop\n\t\t\n\t\t//Loop through all the amount fields and create a running subtotal\n\t\tangular.forEach($scope.appliedOrderPayment, function(obj, key) {\n\t\t\t//Don't count the field if its undefied or not a number\n\t\t\tif(obj.amount != undefined && !isNaN(obj.amount)) {\n\t\t\t\t//Charge / adjustment condition for subtotal\n\t\t\t\tif($scope.paymentType==paymentType.aptCharge || $scope.paymentType == paymentType.aptAdjustment) {\n\t\t\t\t\tif(obj.paymentType==paymentType.aptCharge)\n\t\t\t\t\t\t$scope.totalAmountToApply += parseFloat(obj.amount);\n\t\t\t\t\telse if(obj.paymentType==paymentType.aptCredit)\n\t\t\t\t\t\t$scope.totalAmountToApply -= parseFloat(obj.amount);\n\n\t\t\t\t//Credit condition for subtotal\n\t\t\t\t} else if($scope.paymentType==paymentType.aptCredit) {\n\t\t\t\t\tif(obj.paymentType==paymentType.aptCharge)\n\t\t\t\t\t\t$scope.totalAmountToApply -= parseFloat(obj.amount);\n\t\t\t\t\telse if(obj.paymentType==paymentType.aptCredit)\n\t\t\t\t\t\t$scope.totalAmountToApply += parseFloat(obj.amount);\n\t\t\t\t}\n\t\t\t}\n\t    });\n\n\t\t//The amount not applied to an order\n\t    $scope.amountUnapplied = (Math.round(($scope.amount - $scope.totalAmountToApply) * 100) / 100);\n\t\t$scope.accountBalanceChange = parseFloat($scope.amount);\n\t\t\n\t\t//Switch the account balance display amount to a negative if you are doing a charge\n\t\tif($scope.paymentType==paymentType.aptCharge)\n\t\t\t$scope.accountBalanceChange = parseFloat($scope.accountBalanceChange * -1); //If charge, change to neg since we are lowering account balance\n\t\telse if($scope.paymentType==paymentType.aptAdjustment)\n\t\t\t$scope.accountBalanceChange += parseFloat($scope.amountUnapplied); //If adjustment, use the amount unapplied to determine the balance change\n\t};\n}]);"],"sourceRoot":"/source/"}