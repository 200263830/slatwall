{"version":3,"sources":["model/collectionConfig.ts"],"names":["slatwalladmin","slatwalladmin.Column","slatwalladmin.Column.constructor","slatwalladmin.FilterGroup","slatwalladmin.FilterGroup.constructor","slatwalladmin.Filter","slatwalladmin.Filter.constructor","slatwalladmin.Join","slatwalladmin.Join.constructor","slatwalladmin.OrderBy","slatwalladmin.OrderBy.constructor","slatwalladmin.CollectionConfig","slatwalladmin.CollectionConfig.constructor","slatwalladmin.CollectionConfig.loadJson","slatwalladmin.CollectionConfig.getJson","slatwalladmin.CollectionConfig.getEntityName","slatwalladmin.CollectionConfig.getOptions","slatwalladmin.CollectionConfig.debug","slatwalladmin.CollectionConfig.formatCollectionName","slatwalladmin.CollectionConfig.addJoin","slatwalladmin.CollectionConfig.addAlias","slatwalladmin.CollectionConfig.capitalize","slatwalladmin.CollectionConfig.addColumn","slatwalladmin.CollectionConfig.setDisplayProperties","slatwalladmin.CollectionConfig.addFilter","slatwalladmin.CollectionConfig.setOrderBy","slatwalladmin.CollectionConfig.setCurrentPage","slatwalladmin.CollectionConfig.setPageShow","slatwalladmin.CollectionConfig.setKeywords"],"mappings":"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","file":"model/collectionConfig.js","sourcesContent":["\nmodule slatwalladmin{\n\n    class Column{\n        constructor(\n            public propertyIdentifier:string,\n            public title:string,\n            public isVisible:boolean,\n            public isDeletable:boolean,\n            public attributeID?:string,\n            public attributeSetObject?:string\n        ){}\n    }\n\n    class FilterGroup{\n        constructor(\n            public filterGroups:Filter[]\n        ){}\n    }\n\n    class Filter{\n        constructor(\n            public propertyIdentifier:string,\n            public value:string,\n            public comparisonOperator:string,\n            public logicalOperator?:string\n        ){}\n    }\n\n    class Join{\n        constructor(\n            public associationName:string,\n            public alias:string\n        ){}\n    }\n\n    class OrderBy{\n        constructor(\n           public propertyIdentifier:string,\n           public direction:string\n        ){}\n    }\n\n    export class CollectionConfig {\n\n        constructor(\n            private $slatwall,\n            public  baseEntityName:string,\n            private baseEntityAlias:string,\n            private columns?:Column[],\n            private filterGroups:Filter[]=[],\n            private joins?:Join[],\n            private orderBy?:OrderBy[],\n            private currentPage:number = 1,\n            private pageShow:number = 10,\n            private keywords:string = ''\n        ){}\n\n\n        loadJson(jsonCollection){\n            this.baseEntityAlias = jsonCollection.baseEntityAlias;\n            this.baseEntityName = jsonCollection.baseEntityName;\n            this.columns = jsonCollection.columns;\n            this.currentPage = jsonCollection.currentPage;\n            this.filterGroups = jsonCollection.filterGroups;\n            this.joins = jsonCollection.joins;\n            this.keywords = jsonCollection.keywords;\n            this.orderBy = jsonCollection.orderBy;\n            this.pageShow = jsonCollection.pageShow;\n        }\n\n        getJson(){\n            var config = this;\n            delete config['$slatwall'];\n            //config.filterGroups= [{'filterGroup': this.filterGroups}];\n            return angular.toJson(config);\n        }\n\n        getEntityName(){\n            return this.baseEntityName.charAt(0).toUpperCase() + this.baseEntityName.slice(1);\n        }\n\n        getOptions(){\n            return {\n                columnsConfig: angular.toJson(this.columns),\n                filterGroupsConfig: angular.toJson([{'filterGroup': this.filterGroups}]),\n                joinsConfig: angular.toJson(this.joins),\n                currentPage: this.currentPage,\n                pageShow: this.pageShow,\n                keywords: this.keywords\n            }\n        }\n\n        debug(){\n            return this;\n        }\n\n        private formatCollectionName(propertyIdentifier:string, property:boolean=true){\n            var collection = '';\n            var parts = propertyIdentifier.split('.');\n            for (var i = 0; i < parts.length; i++) {\n                if (typeof this.$slatwall['new' + this.capitalize(parts[i])] !== \"function\"){\n                    if(property) collection += ((i)?'':this.baseEntityAlias)+'.' + parts[i];\n                    break;\n                }\n                collection += '_' + parts[i].toLowerCase();\n            }\n            return collection;\n        }\n\n        private addJoin(associationName: string) {\n            var joinFound:boolean = false;\n            if(angular.isUndefined(this.columns)){\n                this.joins = [];\n            }\n            var parts = associationName.split('.');\n            var collection = '';\n            for (var i = 0; i < parts.length; i++) {\n                joinFound = false;\n                if (typeof this.$slatwall['new' + this.capitalize(parts[i])] !== \"function\") break;\n                collection += '.' + parts[i];\n                this.joins.map(function(_join) {\n                    if (_join.associationName == collection.slice(1)) {\n                        joinFound = true;\n                        return;\n                    }\n                });\n                if(!joinFound) {\n                    this.joins.push(new Join(collection.slice(1), collection.toLowerCase().replace(/\\./g, '_')));\n                }\n\n            }\n\n        }\n\n        private addAlias(propertyIdentifier:string){\n            var parts = propertyIdentifier.split('.');\n            if(parts.length > 1 && parts[0] !== this.baseEntityAlias){\n                return this.baseEntityAlias+'.'+propertyIdentifier;\n            }\n            return propertyIdentifier;\n        }\n\n        private capitalize(s) {\n            return s && s[0].toUpperCase() + s.slice(1);\n        }\n\n        addColumn(column: string, title: string = '', options:Object = {}){\n            var isVisible = true;\n            var isDeletable = true;\n            if(angular.isUndefined(this.columns)){\n                this.columns = [];\n            }\n            if(!angular.isUndefined(options['isVisible'])){\n                isVisible = options['isVisible'];\n            }\n            if(!angular.isUndefined(options['isDeletable'])){\n                isDeletable = options['isDeletable'];\n            }\n\n            this.columns.push(new Column(\n                column,\n                title,\n                isVisible,\n                isDeletable,\n                options['attributeID'],\n                options['attributeSetObject']\n            ));\n        }\n\n\n        setDisplayProperties(propertyIdentifier: string, title: string = '', options:Object = {}){\n\n            var _DividedColumns = propertyIdentifier.trim().split(',');\n            var _DividedTitles = title.trim().split(',');\n            if(_DividedColumns.length > 0) {\n                _DividedColumns.forEach((column:string, index)  => {\n                    column = column.trim();\n                    this.addJoin(column);\n                    if(_DividedTitles[index] !== undefined && _DividedTitles[index] != '') {\n                        title = _DividedTitles[index].trim();\n                    }else {\n                        var startAlias = new RegExp('^'+this.baseEntityAlias +'\\\\.');\n                        title = column.replace(startAlias, '').replace(/\\./g, '_');\n                    }\n                    this.addColumn(this.formatCollectionName(column),title, options);\n\n                });\n            }else{\n                this.addJoin(propertyIdentifier);\n                propertyIdentifier = this.addAlias(propertyIdentifier);\n                if(title == '') title = propertyIdentifier.trim().replace(this.baseEntityAlias+'.','').replace(/\\./g,'_');\n                this.addColumn(this.formatCollectionName(propertyIdentifier),title, options);\n            }\n        }\n\n        addFilter(propertyIdentifier: string, value:string, comparisonOperator: string = '=', logicalOperator: string = ''){\n            this.addJoin(propertyIdentifier);\n            this.filterGroups.push(\n                new Filter(this.formatCollectionName(propertyIdentifier), value, comparisonOperator, logicalOperator)\n            );\n\n        }\n\n        setOrderBy(propertyIdentifier:string, direction:string='DESC'){\n            if(angular.isUndefined(this.orderBy)){\n                this.orderBy = [];\n            }\n            this.addJoin(propertyIdentifier);\n            this.orderBy.push(new OrderBy(this.formatCollectionName(propertyIdentifier), direction));\n        }\n\n        setCurrentPage(pageNumber){\n            this.currentPage = pageNumber;\n        }\n\n        setPageShow(NumberOfPages){\n            this.pageShow = NumberOfPages;\n        }\n\n        setKeywords(keyword){\n            this.keywords = keyword;\n        }\n\n     }\n}"],"sourceRoot":"/source/"}