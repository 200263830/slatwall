{"version":3,"sources":["modules/ngslatwall.ts"],"names":[],"mappings":"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","file":"modules/ngslatwall.js","sourcesContent":["\nangular.module('ngSlatwall',[])\n.provider('$slatwall',[ \nfunction(){\n    var _deferred = {};\n    var _config = {\n        dateFormat : 'MM/DD/YYYY',\n        timeFormat : 'HH:MM',\n        rbLocale : '',\n        baseURL : '/',\n        applicationKey : 'Slatwall',\n        debugFlag : true,\n        instantiationKey : '84552B2D-A049-4460-55F23F30FE7B26AD'\n    };\n    \n    if(slatwallAngular.slatwallConfig){\n        angular.extend(_config, slatwallAngular.slatwallConfig);\n    }\n    \n    return {\n        \n        $get:['$q',\n            '$http',\n            '$timeout',\n            '$log',\n            '$rootScope',\n            '$location',\n            '$anchorScroll',\n            'utilityService', \n            'formService', \n            function (\n                $q,\n                $http,\n                $timeout,\n                $log,\n                $rootScope,\n                $location,\n                $anchorScroll,\n                utilityService,\n                formService\n            )\n        {\n            var slatwallService = {\n                setJsEntities: function(jsEntities){\n                    _jsEntities=jsEntities;\n                },\n                getJsEntities: function(){\n                    return _jsEntities;\n                },\n                populateCollection:function(collectionData,collectionConfig){\n                    var entities = [];\n                    angular.forEach(collectionData, function(collectionItemData, key){\n                        //create base Entity\n                        var entity = slatwallService['new'+collectionConfig.baseEntityName.replace('Slatwall','')]();\n                        angular.forEach(collectionConfig.columns, function(column, key){\n                            var propertyIdentifier = column.propertyIdentifier.replace(collectionConfig.baseEntityAlias.toLowerCase()+'.','');\n                            var propertyIdentifierArray = propertyIdentifier.split('.');\n                            var propertyIdentifierKey = propertyIdentifier.replace(/\\./g,'_');\n                            var currentEntity = entity;\n                            angular.forEach(propertyIdentifierArray,function(property,key){\n                                if(key === propertyIdentifierArray.length-1){\n                                    if(angular.isObject(collectionItemData[propertyIdentifierKey]) && currentEntity.metaData[property].fieldtype === 'many-to-one'){\n                                        var relatedEntity = slatwallService['new'+currentEntity.metaData[property].cfc]();\n                                        relatedEntity.$$init(collectionItemData[propertyIdentifierKey][0]);\n                                        currentEntity['$$set'+currentEntity.metaData[property].name.charAt(0).toUpperCase()+currentEntity.metaData[property].name.slice(1)](relatedEntity);\n                                    }else if(angular.isArray(collectionItemData[propertyIdentifierKey]) && (currentEntity.metaData[property].fieldtype === 'one-to-many')){\n                                        angular.forEach(collectionItemData[propertyIdentifierKey],function(arrayItem,key){\n                                            var relatedEntity = slatwallService['new'+currentEntity.metaData[property].cfc]();\n                                            relatedEntity.$$init(arrayItem);\n                                            currentEntity['$$add'+currentEntity.metaData[property].singularname.charAt(0).toUpperCase()+currentEntity.metaData[property].singularname.slice(1)](relatedEntity);\n                                        });\n                                    }else{\n                                        currentEntity.data[property] = collectionItemData[propertyIdentifierKey];\n                                    }\n                                }else{\n                                    var propertyMetaData = currentEntity.metaData[property];\n                                    if(angular.isUndefined(currentEntity.data[property])){\n                                        if(propertyMetaData.fieldtype === 'one-to-many'){\n                                            relatedEntity = [];\n                                        }else{\n                                            relatedEntity = slatwallService['new'+propertyMetaData.cfc]();\n                                        }\n                                    }else{\n                                        relatedEntity = currentEntity.data[property];\n                                    }\n                                    currentEntity['$$set'+propertyMetaData.name.charAt(0).toUpperCase()+propertyMetaData.name.slice(1)](relatedEntity);\n                                    currentEntity = relatedEntity;\n                                }\n                            });\n                        });\n                        entities.push(entity);\n                    });\n                    return entities;\n                },\n                getDefer:function(deferKey){\n                    return _deferred[deferKey];\n                },\n                cancelPromise:function(deferKey){\n                    var deferred = this.getDefer(deferKey);\n                    if(angular.isDefined(deferred)){\n                        deferred.resolve({messages:[{messageType:'error',message:'User Cancelled'}]});\n                    }\n                },\n                newEntity:function(entityName){\n                    return new _jsEntities[entityName];\n                },\n                getEntity:function(entityName, options){\n                    if(angular.isDefined(options.deferKey)){\n                        this.cancelPromise(options.deferKey);\n                    }\n                    \n                    var params = {};\n                    if(typeof options === 'String') {\n                        var urlString = _config.baseURL+'/index.cfm/?slatAction=api:main.get&entityName='+entityName+'&entityID='+options.id;\n                    } else {\n                        params['P:Current'] = options.currentPage || 1;\n                        params['P:Show'] = options.pageShow || 10;\n                        params.keywords = options.keywords || '';\n                        params.columnsConfig = options.columnsConfig || '';\n                        params.filterGroupsConfig = options.filterGroupsConfig || '';\n                        params.joinsConfig = options.joinsConfig || '';\n                        params.orderByConfig = options.orderByConfig || '';\n                        params.isDistinct = options.isDistinct || false;\n                        params.propertyIdentifiersList = options.propertyIdentifiersList || '';\n                        params.allRecords = options.allRecords || '';\n                        params.defaultColumns = options.defaultColumns || true;\n                        params.processContext = options.processContext || '';\n                        var urlString = _config.baseURL+'/index.cfm/?slatAction=api:main.get&entityName='+entityName;\n                    }\n                    \n                    var deferred = $q.defer();\n                    if(angular.isDefined(options.id)) {\n                        urlString += '&entityId='+options.id;   \n                    }\n\n                    var transformResponse = function(data){\n                            \n                        var data = JSON.parse(data);\n                        \n                        return data;\n                    };\n                    if(angular.isDefined(options.transformResponse)){\n                        transformResponse=function(data){\n                            \n                            var data = JSON.parse(data);\n                            if(angular.isDefined(data.records)){\n                                data = options.transformResponse(data.records);\n                            }\n                            \n                            return data;\n                        };\n                    }\n                    \n                    $http.get(urlString,\n                        {\n                            params:params,\n                            timeout:deferred.promise,\n                            transformResponse:transformResponse\n                        }\n                    )\n                    .success(function(data){\n                        deferred.resolve(data);\n                    }).error(function(reason){\n                        deferred.reject(reason);\n                    });\n                    \n                    if(options.deferKey){\n                        _deferred[options.deferKey] = deferred;\n                    }\n                    return deferred.promise;\n                    \n                },\n                getResizedImageByProfileName:function (profileName, skuIDs) {\n                    var deferred = $q.defer();\n                    return $http.get(_config.baseURL + '/index.cfm/?slatAction=api:main.getResizedImageByProfileName&profileName=' + profileName + '&skuIDs=' + skuIDs)\n                    .success(function(data){\n                        deferred.resolve(data);\n                    }).error(function(reason){\n                        deferred.reject(reason);\n                    });\n                },\n                getEventOptions:function(entityName){\n                    var deferred = $q.defer();\n                    var urlString = _config.baseURL+'/index.cfm/?slatAction=api:main.getEventOptionsByEntityName&entityName='+entityName;\n                    \n                    $http.get(urlString)\n                    .success(function(data){\n                        deferred.resolve(data);\n                    }).error(function(reason){\n                        deferred.reject(reason);\n                    });\n                    \n                    return deferred.promise;\n                },\n                checkUniqueOrNullValue:function (object, property, value) {\n                    return $http.get(_config.baseURL + '/index.cfm/?slatAction=api:main.getValidationPropertyStatus&object=' + object + '&propertyidentifier=' + property + '&value=' + escape(value)).then(\n                function (results) {\n                   return results.data.uniqueStatus;\n                 })\n                },\n                checkUniqueValue:function (object, property, value) {\n                    return $http.get(_config.baseURL + '/index.cfm/?slatAction=api:main.getValidationPropertyStatus&object=' + object + '&propertyidentifier=' + property + '&value=' + escape(value)).then(\n                        function (results) {\n                            return results.data.uniqueStatus;\n                    });\n                },\n                getPropertyDisplayData:function(entityName,options){\n                    var deferred = $q.defer();\n                    var urlString = _config.baseURL+'/index.cfm/?slatAction=api:main.getPropertyDisplayData&entityName='+entityName;\n                    var params = {};\n                    params.propertyIdentifiersList = options.propertyIdentifiersList || '';\n                    $http.get(urlString,{params:params})\n                    .success(function(data){\n                        deferred.resolve(data);\n                    }).error(function(reason){\n                        deferred.reject(reason);\n                    });\n                    \n                    return deferred.promise;\n                },\n                getPropertyDisplayOptions:function(entityName,options){\n                    var deferred = $q.defer();\n                    var urlString = _config.baseURL+'/index.cfm/?slatAction=api:main.getPropertyDisplayOptions&entityName='+entityName;\n                    var params = {};\n                    params.property = options.property || '';\n                    if(angular.isDefined(options.argument1)){\n                        params.argument1 = options.argument1;\n                    }\n                    \n                    $http.get(urlString,{params:params})\n                    .success(function(data){\n                        deferred.resolve(data);\n                    }).error(function(reason){\n                        deferred.reject(reason);\n                    });\n                    \n                    return deferred.promise;\n                },\n                saveEntity:function(entityName,id,params,context){\n                    \n                    var deferred = $q.defer();\n    \n                    var urlString = _config.baseURL+'/index.cfm/?slatAction=api:main.post'; \n                    \n                    if(angular.isDefined(entityName)){\n                        params.entityName = entityName;\n                    }\n                    if(angular.isDefined(id)){\n                        params.entityID = id;\n                    }\n    \n                    if(angular.isDefined(context)){\n                        params.context = context;\n                    }\n                    \n                    $http({\n                        url:urlString,\n                        method:'POST',\n                        data: $.param(params),\n                        headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n                    })\n                    .success(function(data){\n                        deferred.resolve(data);\n                        \n                    }).error(function(reason){\n                        deferred.reject(reason);\n                    });\n                    return deferred.promise;\n                },\n                getExistingCollectionsByBaseEntity:function(entityName){\n                    var deferred = $q.defer();\n                    var urlString = _config.baseURL+'/index.cfm/?slatAction=api:main.getExistingCollectionsByBaseEntity&entityName='+entityName;\n                    \n                    $http.get(urlString)\n                    .success(function(data){\n                        deferred.resolve(data);\n                    }).error(function(reason){\n                        deferred.reject(reason);\n                    });\n                    return deferred.promise;\n                    \n                },\n                getFilterPropertiesByBaseEntityName:function(entityName){\n                    var deferred = $q.defer();\n                    var urlString = _config.baseURL+'/index.cfm/?slatAction=api:main.getFilterPropertiesByBaseEntityName&EntityName='+entityName;\n                    \n                    $http.get(urlString)\n                    .success(function(data){\n                        deferred.resolve(data);\n                    }).error(function(reason){\n                        deferred.reject(reason);\n                    });\n                    return deferred.promise;\n                },\n                getRBLoaded:function(){\n                    return _loadedResourceBundle;\n                },\n                hasResourceBundle:function(){\n                    if(!_loadingResourceBundle && !_loadedResourceBundle){\n                        _loadingResourceBundle = true;\n                        var localeListArray = slatwallService.getConfigValue('rbLocale').split('_');\n                        var rbPromise;\n                        var rbPromises = [];\n                        rbPromise = slatwallService.getResourceBundle(slatwallService.getConfigValue('rbLocale'));\n                        rbPromises.push(rbPromise);\n                        if(localeListArray.length === 2){\n                            rbPromise = slatwallService.getResourceBundle(localeListArray[0]);\n                            rbPromises.push(rbPromise);\n                        }\n                        if(localeListArray[0] !== 'en'){\n                            slatwallService.getResourceBundle('en_us');\n                            slatwallService.getResourceBundle('en');\n                        }   \n                        $q.all(rbPromises).then(function(data){\n                            $rootScope.loadedResourceBundle = true;\n                            _loadingResourceBundle = false;\n                            _loadedResourceBundle = true;\n                            \n                        },function(error){\n                            $rootScope.loadedResourceBundle = true;\n                            _loadingResourceBundle = false;\n                            _loadedResourceBundle = true\n                        });\n                    }\n                    return _loadedResourceBundle;\n                    \n                },\n                getResourceBundle:function(locale){\n                    var deferred = $q.defer();\n                    var locale = locale || _config.rbLocale;\n                    \n                    if(_resourceBundle[locale]){\n                        return _resourceBundle[locale];\n                    }\n                    \n                    var urlString = _config.baseURL+'/index.cfm/?slatAction=api:main.getResourceBundle&instantiationKey='+_config.instantiationKey;\n                    var params = {\n                        locale:locale\n                    };\n                    return $http.get(urlString,{params:params}).success(function(response){\n                        _resourceBundle[locale] = response.data;\n                    }).error(function(response){\n                        _resourceBundle[locale] = {};\n                    });\n                },\n                \n                \n                rbKey:function(key,replaceStringData){\n                    var keyValue = this.getRBKey(key,_config.rbLocale);\n                    \n                    return keyValue;\n                },\n                getRBKey:function(key,locale,checkedKeys,originalKey){\n                    if(!_loadingResourceBundle && _loadedResourceBundle){\n                        key = key.toLowerCase();\n                        checkedKeys = checkedKeys || \"\";\n                        locale = locale || 'en_us';\n                        \n                        var keyListArray = key.split(',');\n                        if(keyListArray.length > 1) {\n                            var keyValue = \"\";\n                            \n                            \n                            for(var i=0; i<keyListArray.length; i++) {\n                                \n                                \n                                keyValue = this.getRBKey(keyListArray[i], locale, keyValue);\n                                \n                                if(keyValue.slice(-8) != \"_missing\") {\n                                    break;\n                                }\n                            }\n                            \n                            return keyValue;\n                        }\n                        \n                        \n                        var bundle = slatwallService.getResourceBundle(locale);\n                        if(!angular.isFunction(bundle.then)){\n                            if(angular.isDefined(bundle[key])) {\n                                return bundle[key];\n                            }\n                            \n                            \n                            var checkedKeysListArray = checkedKeys.split(',');\n                            checkedKeysListArray.push(key+'_'+locale+'_missing');\n                            \n                            checkedKeys = checkedKeysListArray.join(\",\");\n                            if(angular.isUndefined(originalKey)){\n                                originalKey = key;\n                            }\n                            \n                            var localeListArray = locale.split('_');\n                            if(localeListArray.length === 2){\n                                bundle = slatwallService.getResourceBundle(localeListArray[0]);\n                                if(angular.isDefined(bundle[key])){\n                                    return bundle[key];\n                                }\n                                \n                                checkedKeysListArray.push(key+'_'+localeListArray[0]+'_missing');\n                                checkedKeys = checkedKeysListArray.join(\",\");\n                            }\n                            \n                            var keyDotListArray = key.split('.');\n                            if( keyDotListArray.length >= 3\n                                && keyDotListArray[keyDotListArray.length - 2] === 'define'\n                            ){\n                                var newKey = key.replace(keyDotListArray[keyDotListArray.length - 3]+'.define','define');\n                                return this.getRBKey(newKey,locale,checkedKeys,originalKey);\n                            }else if( keyDotListArray.length >= 2 && keyDotListArray[keyDotListArray.length - 2] !== 'define'){\n                                var newKey = key.replace(keyDotListArray[keyDotListArray.length -2]+'.','define.');\n                                return this.getRBKey(newKey,locale,checkedKeys,originalKey);\n                            }\n                            \n                            if(localeListArray[0] !== \"en\"){\n                                return this.getRBKey(originalKey,'en',checkedKeys);\n                            }\n                            return checkedKeys;\n                        }\n                    }\n                    return '';\n                },\n                 getConfig:function(){\n                    return _config;\n                },\n                getConfigValue:function(key){\n                    return _config[key];\n                },\n                setConfigValue:function(key,value){\n                    _config[key] = value;\n                },\n                setConfig:function(config){\n                    _config = config;\n                }\n              };\n                     \n            var _resourceBundle = {};\n            var _loadingResourceBundle = false;\n            var _loadedResourceBundle = false;\n            var _jsEntities = {};\n            \n      return slatwallService;\n   }],\n    getConfig:function(){\n        return _config;\n    },\n    getConfigValue:function(key){\n        return _config[key];\n    },\n    setConfigValue:function(key,value){\n        _config[key] = value;\n    },\n    setConfig:function(config){\n        _config = config;\n    }\n};\n}]);\n        "],"sourceRoot":"/source/"}