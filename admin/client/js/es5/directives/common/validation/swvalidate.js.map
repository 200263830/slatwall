{"version":3,"sources":["directives/common/validation/swvalidate.ts"],"names":["validate","checkHasValidationType","map","forEach","getNamesFromObject","validate_RegExp","validate_MinValue","validate_MaxValue","validate_MinLength","validate_MaxLength","validate_Eq","validate_Neq","validate_Lte","validate_Gte","validate_EqProperty","validate_IsNumeric","validate_Required"],"mappings":"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","file":"directives/common/validation/swvalidate.js","sourcesContent":["/**\n * This validate directive will look at the current element, figure out the context (save, edit, delete) and \n * validate based on that context as defined in the validation properties object.\n */\n'use strict';\nangular.module('slatwalladmin').directive('swValidate',\n\n[ '$log','$slatwall', function($log, $slatwall) {\n\n\treturn {\n\t\t\n\t\trestrict : \"A\",\n\t\trequire : '^ngModel',\n\t\tlink : function(scope, elem, attr, ngModel) {\n\t\t\t\n\t\t\t//Define our contexts and validation property enums.\n\t\t\tvar ContextsEnum  = {\n\t\t\t\t\t\tSAVE: {name: \"save\", value: 0},\n\t\t\t\t\t\tDELETE: {name: \"delete\", value: 1},\n\t\t\t\t\t\tEDIT: {name: \"edit\", value: 2}\n\t\t\t};\n\t\t\tvar ValidationPropertiesEnum = {\n\t\t\t\t\tREGEX: {name: \"regex\", value: 0},\n\t\t\t\t\tMIN_VALUE: {name: \"minValue\", value: 1},\n\t\t\t\t\tMAX_VALUE: {name: \"maxValue\", value: 2},\n\t\t\t\t\tEQ: {name: \"eq\", value: 3},\n\t\t\t\t\tNEQ: {name: \"neq\", value: 4},\n\t\t\t\t\tUNIQUE: {name: \"unique\", value: 5},\n\t\t\t\t\tLTE: {name: \"lte\", value: 6},\n\t\t\t\t\tGTE: {name: \"gte\", value: 7},\n\t\t\t\t\tMIN_LENGTH: {name: \"minLength\", value: 8},\n\t\t\t\t\tMAX_LENGTH: {name: \"maxLength\", value: 9},\n\t\t\t\t\tDATA_TYPE: {name: \"dataType\", value: 10},\n\t\t\t\t\tREQUIRED: {name: \"required\", value: 11}\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t\tscope.validationPropertiesEnum = ValidationPropertiesEnum;\n\t\t\tscope.contextsEnum = ContextsEnum;\n\t\t\t\n\t\t\tvar myCurrentContext = scope.contextsEnum.SAVE; //We are only checking the save context right now.\n\t\t\tvar contextNamesArray = getNamesFromObject(ContextsEnum); //Convert for higher order functions.\n\t\t\tvar validationPropertiesArray = getNamesFromObject(ValidationPropertiesEnum);\t //Convert for higher order functions.\n\t\t\tvar validationObject = scope.propertyDisplay.object.validations.properties;//Get the scope validation object.\n\t\t\tvar errors = scope.propertyDisplay.errors;\n\t\t\tvar errorMessages = [];\n\t\t\tvar failFlag = 0;\n\t\t\t\n\t\t\t/**\n\t\t\t * Iterates over the validation object looking for the current elements validations, maps that to a validation function list\n\t\t\t * and calls those validate functions. When a validation fails, an error is set, the elements border turns red.\n\t\t\t */\n\t\t\tfunction validate(name, context, elementValue) {\n\t\t\t\tvar validationResults = {};\n\t\t\t\tvalidationResults = {\"name\": \"name\", \"context\": \"context\", \"required\": \"required\", \"error\": \"none\", \"errorkey\": \"none\"};\n\t\t\t\t\n\t\t\t\t\t\t\t\tfor ( var key in validationObject) {\n\t\t\t\t\t\t\t\t\t// Look for the current attribute in the\n\t\t\t\t\t\t\t\t\t// validation parameters.\n\t\t\t\t\t\t\t\t\tif (key === name || key === name + \"Flag\") {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// Now that we have found the current\n\t\t\t\t\t\t\t\t\t\t// validation parameters, iterate\n\t\t\t\t\t\t\t\t\t\t// through them looking for\n\t\t\t\t\t\t\t\t\t\t// the required parameters that match\n\t\t\t\t\t\t\t\t\t\t// the current page context (save,\n\t\t\t\t\t\t\t\t\t\t// delete, etc.)\n\t\t\t\t\t\t\t\t\t\tfor ( var inner in validationObject[key]) {\n\t\t\t\t\t\t\t\t\t\t\tvar required = validationObject[key][inner].required || \"false\"; // Get\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// the\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// required\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// value\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tvar context = validationObject[key][inner].contexts || \"none\"; // Get\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// the\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// element\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// context\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t//Setup the validation results object to pass back to caller.\n\t\t\t\t\t\t\t\t\t\t\tvalidationResults = {\"name\": key, \"context\": context, \"required\": required, \"error\": \"none\", \"errorkey\": \"none\"};\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tvar elementValidationArr = map(\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheckHasValidationType,\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationPropertiesArray,\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationObject[key][inner]);\n\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t//Iterate over the array and call the validate function if it has that property.\n\t\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < elementValidationArr.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif (elementValidationArr[i] == true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (validationPropertiesArray[i] === \"regex\" && elementValue !== \"\"){//If element is zero, need to check required \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Get the regex string to match and send to validation function.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar re = validationObject[key][inner].regex;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_RegExp(elementValue, re);//true if pattern match, fail otherwise.\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Invalid input\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"REGEX\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Valid input\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"REGEX\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"minValue\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationMinValue = validationObject[key][inner].minValue;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$log.debug(validationMinValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_MinValue(elementValue, validationMinValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$log.debug(\"e>v\" + result + \" :\" + elementValue, \":\" + validationMinValue );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Minimum value is: \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationMinValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"MIN_VALUE\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"MIN_VALUE\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"maxValue\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationMaxValue = validationObject[key][inner].maxValue;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_MaxValue(elementValue, validationMaxValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$log.debug(\"Max Value result is: \" + result);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Maximum value is: \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationMaxValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"MAX_VALUE\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"minLength\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationMinLength = validationObject[key][inner].minLength;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_MinLength(elementValue, validationMinLength);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$log.debug(\"Min Length result is: \" + result);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Minimum length must be: \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationMinLength);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"MIN_LENGTH\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"maxLength\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationMaxLength = validationObject[key][inner].maxLength;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_MaxLength(elementValue, validationMaxLength);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$log.debug(\"Max Length result is: \" + result);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Maximum length is: \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationMaxLength);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"MAX_LENGTH\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"eq\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationEq = validationObject[key][inner].eq;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_Eq(elementValue, validationEq);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Must equal \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationEq);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"EQ\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"neq\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationNeq = validationObject[key][inner].neq;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_Neq(elementValue, validationNeq);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Must not equal: \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationNeq);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"NEQ\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"lte\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationLte = validationObject[key][inner].lte;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_Lte(elementValue, validationLte);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Must be less than \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationLte);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"LTE\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"gte\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationGte = validationObject[key][inner].gte;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_Gte(elementValue, validationGte);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Must be greater than: \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ validationGte);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = \"invalid-\" + ValidationPropertiesEnum[\"GTE\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(validationPropertiesArray[i] === \"required\"){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar validationRequire = validationObject[key][inner].require;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar result = validate_Required(elementValue, validationRequire);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (result != true) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Required\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = ValidationPropertiesEnum[\"REQUIRED\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrorMessages\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.push(\"Required\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.error = errorMessages[errorMessages.length - 1];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.errorkey = ValidationPropertiesEnum[\"REQUIRED\"].name;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalidationResults.fail = false;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn validationResults;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t}//<---end validate.\t\t\t\n}\n\t\t\t/**\n\t\t\t * Function to map if we need a validation on this element.\n\t\t\t */\n\t\t\tfunction checkHasValidationType(validationProp, validationType){\n\t\t\t\tif (validationProp[validationType] != undefined) {\n\t\t\t\t\treturn true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Iterates over the properties object finding which types of validation are needed.\n\t\t\t */\n\t\t\tfunction map(func, array, obj) {\n\t\t\t\t  var result = [];\n\t\t\t\t  forEach(array, function (element) {\n\t\t\t\t    result.push(func(obj, element));\n\t\t\t\t  });\n\t\t\t\t  return result;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Array iteration helper. \n\t\t\t */\n\t\t\tfunction forEach(array, action) {\n\t\t\t\t  for (var i = 0; i < array.length; i++)\n\t\t\t\t    action(array[i]);\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Helper function to read all the names in our enums into an array that the higher order functions can use.\n\t\t\t */\n\t\t\tfunction getNamesFromObject(obj){\n\t\t\t\tvar result = [];\n\t\t\t\tfor (var i in obj){\n\t\t\t\t\tvar name = obj[i].name || \"stub\";\n\t\t\t\t\tresult.push(name);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\t\n\t\t\t\n\t\t\t/**\n\t\t\t * Tests the value for a RegExp match given by the pattern string. \n\t\t\t * Validates true if pattern match, false otherwise.\n\t\t\t */\n\t\t\tfunction validate_RegExp(value, pattern){\n\t\t\t\tvar regex = new RegExp(pattern);\n\t\t\t\tif (regex.test(value)){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if userValue >= minValue (inclusive)\n\t\t\t */\n\t\t\tfunction validate_MinValue(userValue, minValue){\n\t\t\t\treturn (userValue >= minValue);\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if userValue <= maxValue (inclusive)\n\t\t\t */\n\t\t\tfunction validate_MaxValue(userValue, maxValue){\n\t\t\t\treturn (userValue <= maxValue) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if length of the userValue >= minLength (inclusive)\n\t\t\t */\n\t\t\tfunction validate_MinLength(userValue, minLength){\n\t\t\t\treturn (userValue.length >= minLength) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if length of the userValue <= maxLength (inclusive)\n\t\t\t */\n\t\t\tfunction validate_MaxLength(userValue, maxLength){\n\t\t\t\treturn (userValue.length <= maxLength) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the userValue == eqValue \n\t\t\t */\n\t\t\tfunction validate_Eq(userValue, eqValue){\n\t\t\t\treturn (userValue == eqValue) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the userValue != neqValue \n\t\t\t */\n\t\t\tfunction validate_Neq(userValue, neqValue){\n\t\t\t\treturn (userValue != neqValue) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the userValue < decisionValue (exclusive)\n\t\t\t */\n\t\t\tfunction validate_Lte(userValue, decisionValue){\n\t\t\t\treturn (userValue < decisionValue) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the userValue > decisionValue (exclusive)\n\t\t\t */\n\t\t\tfunction validate_Gte(userValue, decisionValue){\n\t\t\t\treturn (userValue > decisionValue) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the userValue === property\n\t\t\t */\n\t\t\tfunction validate_EqProperty(userValue, property){\n\t\t\t\treturn (userValue === property) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the given value is !NaN (Negate, Not a Number).\n\t\t\t */\n\t\t\tfunction validate_IsNumeric(value){\n\t\t\t    return !isNaN(value) ? true : false;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * Validates true if the given userValue is empty and the field is required. \n\t\t\t */\n\t\t\tfunction validate_Required(property, userValue){\n\t\t\t    return (userValue == \"\" && property == true) ? true : false;\t\t\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Handles the 'eager' validation on every key press.\n\t\t\t */\n\t\t\tngModel.$parsers.unshift(function(value) {\n\t\t\t\tvar name = elem.context.name;//Get the element name for the validate function.\n\t\t\t\tvar currentValue = elem.val(); //Get the current element value to check validations against.\n\t\t\t\tvar val = validate(name, myCurrentContext, currentValue) || {};\n\t\t\t\t//Check if field is required.\t\t\t\t\n\t\t\t\t$log.debug(scope);\n\t\t\t\t$log.debug(val);\n\t\t\t\tngModel.$setValidity(val.errorkey, !val.fail);\n\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t});//<---end $parsers\n\t\t\t\n\t\t\t/**\n\t\t\t * This handles 'lazy' validation on blur.\n\t\t\t */\n\t\t\telem.bind('blur', function(e){\t\t\n\t\t\t\t\n\t\t\t});\n\t\t}\n\t};\n} ]);"],"sourceRoot":"/source/"}